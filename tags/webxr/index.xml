<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>WebXR on Louka Najjar</title><link>https://fly04.github.io/LabVeilTech/tags/webxr/</link><description>Recent content in WebXR on Louka Najjar</description><generator>Hugo -- gohugo.io</generator><language>ch-fr</language><lastBuildDate>Mon, 24 Jan 2022 16:25:23 +0100</lastBuildDate><atom:link href="https://fly04.github.io/LabVeilTech/tags/webxr/index.xml" rel="self" type="application/rss+xml"/><item><title>Introduction à A-FRAME</title><link>https://fly04.github.io/LabVeilTech/posts/aframe-intro/</link><pubDate>Mon, 24 Jan 2022 16:25:23 +0100</pubDate><guid>https://fly04.github.io/LabVeilTech/posts/aframe-intro/</guid><description>Comment créer une expérience de réalité virtuelle à destination des navigateurs et comment fonctionnent-elles? C&amp;rsquo;est à ces question que je vais tenter dans le présent article de trouver des pistes de réponses à travers une expérimentation avec le framework A-FRAME.
A-FRAME permet, à travers son langage à balise, de créer des scènes 3D. Cela représente un certain avantage pour ceux étant familiers avec le développement web car les mêmes concepts sont mobilisés.</description><content>&lt;p>Comment créer une expérience de réalité virtuelle à destination des navigateurs et comment fonctionnent-elles? C&amp;rsquo;est à ces question que je vais tenter dans le présent article de trouver des pistes de réponses à travers une expérimentation avec le framework A-FRAME.&lt;/p>
&lt;p>A-FRAME permet, à travers son langage à balise, de créer des scènes 3D. Cela représente un certain avantage pour ceux étant familiers avec le développement web car les mêmes concepts sont mobilisés. Cela a également pour avantage de permettre de développer des prototypes rapidement et sans avoir à écrire des lignes interminables de scripts JS.&lt;/p>
&lt;p>Pour commencer, j&amp;rsquo;ai simplement crée un fichier html comprenant un squelette de code basique dans lequel je fais appel à la librairie d&amp;rsquo;A-FRAME.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-html" data-lang="html">&lt;span style="color:#75715e">&amp;lt;!DOCTYPE html&amp;gt;&lt;/span>
&amp;lt;&lt;span style="color:#f92672">html&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#f92672">head&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#f92672">title&lt;/span>&amp;gt;Experimentation A-FRAME&amp;lt;/&lt;span style="color:#f92672">title&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#f92672">script&lt;/span> &lt;span style="color:#a6e22e">src&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;aframe.min.js&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#f92672">script&lt;/span>&amp;gt;
&amp;lt;/&lt;span style="color:#f92672">head&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#f92672">body&lt;/span>&amp;gt;
&amp;lt;/&lt;span style="color:#f92672">body&lt;/span>&amp;gt;
&amp;lt;/&lt;span style="color:#f92672">html&lt;/span>&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Le premier concept important à appréhender est celui de scène. La scène est le conteneur dans lequel se trouveront nos différents éléments. Créer une scène se fait à l&amp;rsquo;aide d&amp;rsquo;une balise:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-html" data-lang="html">&amp;lt;&lt;span style="color:#f92672">body&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#f92672">a-scene&lt;/span>&amp;gt;
&amp;lt;/&lt;span style="color:#f92672">a-scene&lt;/span>&amp;gt;
&amp;lt;/&lt;span style="color:#f92672">body&lt;/span>&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Il est ensuite possible d&amp;rsquo;ajouter toute sorte d&amp;rsquo;objets 3D dans celle-ci, commençons par un cube, soit un élément &lt;code>&amp;lt;a-box&amp;gt;&lt;/code>. Les éléments d&amp;rsquo;A-FRAME, tous comme les différents éléments HTML peuvent prendre un certain nombre d&amp;rsquo;attributs. Ici une couleur, une position et une rotation.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-html" data-lang="html">&amp;lt;&lt;span style="color:#f92672">a-scene&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#f92672">a-box&lt;/span> &lt;span style="color:#a6e22e">color&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;#0095DD&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">position&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0 1 0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">rotation&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;20 40 0&amp;#34;&lt;/span>&amp;gt; &amp;lt;/&lt;span style="color:#f92672">a-box&lt;/span>&amp;gt;
&amp;lt;/&lt;span style="color:#f92672">a-scene&lt;/span>&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://fly04.github.io/LabVeilTech/images/1.png" alt="">&lt;/p>
&lt;p>Notre cube semble alors flotter dans un vide blanc. Rajoutons une skybox, c&amp;rsquo;est-à-dire le fond qu&amp;rsquo;aura notre scène 3D. L&amp;rsquo;élément &lt;code>&amp;lt;a-sky&amp;gt;&lt;/code> va prendre un attribut color, ici un bleu clair.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-html" data-lang="html">&amp;lt;&lt;span style="color:#f92672">a-scene&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#f92672">a-sky&lt;/span> &lt;span style="color:#a6e22e">color&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;#DBF3FF&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#f92672">a-sky&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#f92672">a-box&lt;/span> &lt;span style="color:#a6e22e">color&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;#0095DD&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">position&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0 1 0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">rotation&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;20 40 0&amp;#34;&lt;/span>&amp;gt; &amp;lt;/&lt;span style="color:#f92672">a-box&lt;/span>&amp;gt;
&amp;lt;/&lt;span style="color:#f92672">a-scene&lt;/span>&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://fly04.github.io/LabVeilTech/images/2.png" alt="">&lt;/p>
&lt;p>À ce stade nous avons une scène qui contient un cube et une skybox. En réalité, A-FRAME intègre également un caméra et des lumières par défaut sans lesquels il nous serait impossible de visualiser la scène. Voyons comment définir une caméra et une lumière customisées.&lt;/p>
&lt;p>Pour la caméra, il suffit simplement d&amp;rsquo;ajouter à notre scène un élément &lt;code>&amp;lt;a-camera&amp;gt;&lt;/code>. Celle-ci prendra comme attribut une position depuis laquelle on pourra observer la scène.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-html" data-lang="html">&amp;lt;&lt;span style="color:#f92672">a-scene&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#f92672">a-camera&lt;/span> &lt;span style="color:#a6e22e">position&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0 1 4&amp;#34;&lt;/span>&amp;gt; &amp;lt;/&lt;span style="color:#f92672">a-camera&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#f92672">a-sky&lt;/span> &lt;span style="color:#a6e22e">color&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;#dbf3ff&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#f92672">a-sky&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#f92672">a-box&lt;/span> &lt;span style="color:#a6e22e">color&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;#0095DD&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">position&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0 1 0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">rotation&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;20 40 0&amp;#34;&lt;/span>&amp;gt; &amp;lt;/&lt;span style="color:#f92672">a-box&lt;/span>&amp;gt;
&amp;lt;/&lt;span style="color:#f92672">a-scene&lt;/span>&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Il existe plusieurs types de lumières, par exemple d&amp;rsquo;ambiance ou directionnelle. Ici, on utilisera une lumière directionnelle, placée sur la gauche de notre cube. En plus des attributs que nous avons déjà vu, &lt;code>&amp;lt;a-light&amp;gt;&lt;/code> aura besoin d&amp;rsquo;une couleur, d&amp;rsquo;une intensité et donc comme indiqué précédemment d&amp;rsquo;un type de lumière.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-html" data-lang="html">&amp;lt;&lt;span style="color:#f92672">a-scene&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#f92672">a-light&lt;/span>
&lt;span style="color:#a6e22e">type&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;directional&amp;#34;&lt;/span>
&lt;span style="color:#a6e22e">color&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;#FFF&amp;#34;&lt;/span>
&lt;span style="color:#a6e22e">intensity&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0.5&amp;#34;&lt;/span>
&lt;span style="color:#a6e22e">position&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;-1 1 2&amp;#34;&lt;/span>
&amp;gt;
&amp;lt;/&lt;span style="color:#f92672">a-light&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#f92672">a-camera&lt;/span> &lt;span style="color:#a6e22e">position&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0 1 4&amp;#34;&lt;/span>&amp;gt; &amp;lt;/&lt;span style="color:#f92672">a-camera&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#f92672">a-sky&lt;/span> &lt;span style="color:#a6e22e">color&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;#dbf3ff&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#f92672">a-sky&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#f92672">a-box&lt;/span> &lt;span style="color:#a6e22e">color&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;#0095DD&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">position&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0 1 0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">rotation&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;20 40 0&amp;#34;&lt;/span>&amp;gt; &amp;lt;/&lt;span style="color:#f92672">a-box&lt;/span>&amp;gt;
&amp;lt;/&lt;span style="color:#f92672">a-scene&lt;/span>&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://fly04.github.io/LabVeilTech/images/3.png" alt="">&lt;/p>
&lt;p>S&amp;rsquo;il est possible de créer des cubes, sphères, cylindres et autres formes géométriques définies, A-FRAME permet également de créer des formes plus complexes à l&amp;rsquo;aide de la balise &lt;code>&amp;lt;a-entity&amp;gt;&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-html" data-lang="html">&amp;lt;&lt;span style="color:#f92672">a-scene&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#f92672">a-light&lt;/span>
&lt;span style="color:#a6e22e">type&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;directional&amp;#34;&lt;/span>
&lt;span style="color:#a6e22e">color&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;#FFF&amp;#34;&lt;/span>
&lt;span style="color:#a6e22e">intensity&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0.5&amp;#34;&lt;/span>
&lt;span style="color:#a6e22e">position&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;-1 1 2&amp;#34;&lt;/span>
&amp;gt;
&amp;lt;/&lt;span style="color:#f92672">a-light&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#f92672">a-camera&lt;/span> &lt;span style="color:#a6e22e">position&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0 1 4&amp;#34;&lt;/span>&amp;gt; &amp;lt;/&lt;span style="color:#f92672">a-camera&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#f92672">a-sky&lt;/span> &lt;span style="color:#a6e22e">color&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;#dbf3ff&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#f92672">a-sky&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#f92672">a-entity&lt;/span>
&lt;span style="color:#a6e22e">geometry&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;
&lt;/span>&lt;span style="color:#e6db74"> primitive: torus;
&lt;/span>&lt;span style="color:#e6db74"> radius: 1;
&lt;/span>&lt;span style="color:#e6db74"> radiusTubular: 0.1;
&lt;/span>&lt;span style="color:#e6db74"> segmentsTubular: 12;&amp;#34;&lt;/span>
&lt;span style="color:#a6e22e">rotation&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;10 0 0&amp;#34;&lt;/span>
&lt;span style="color:#a6e22e">position&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;-3 1 0&amp;#34;&lt;/span>
&amp;gt;
&amp;lt;/&lt;span style="color:#f92672">a-entity&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#f92672">a-box&lt;/span> &lt;span style="color:#a6e22e">color&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;#0095DD&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">position&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0 1 0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">rotation&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;20 40 0&amp;#34;&lt;/span>&amp;gt; &amp;lt;/&lt;span style="color:#f92672">a-box&lt;/span>&amp;gt;
&amp;lt;/&lt;span style="color:#f92672">a-scene&lt;/span>&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://fly04.github.io/LabVeilTech/images/4.png" alt="">&lt;/p>
&lt;p>Il est possible d&amp;rsquo;appliquer à nos éléments des matériaux. En plus de spécifier une couleur, les matériaux permettent de pouvoir définir comment celle-ci reflète la lumière et à quel point le matériau est métallique.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-html" data-lang="html">&amp;lt;&lt;span style="color:#f92672">a-scene&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#f92672">a-light&lt;/span>
&lt;span style="color:#a6e22e">type&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;directional&amp;#34;&lt;/span>
&lt;span style="color:#a6e22e">color&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;#FFF&amp;#34;&lt;/span>
&lt;span style="color:#a6e22e">intensity&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0.5&amp;#34;&lt;/span>
&lt;span style="color:#a6e22e">position&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;-1 1 2&amp;#34;&lt;/span>
&amp;gt;
&amp;lt;/&lt;span style="color:#f92672">a-light&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#f92672">a-camera&lt;/span> &lt;span style="color:#a6e22e">position&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0 1 4&amp;#34;&lt;/span>&amp;gt; &amp;lt;/&lt;span style="color:#f92672">a-camera&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#f92672">a-sky&lt;/span> &lt;span style="color:#a6e22e">color&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;#dbf3ff&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#f92672">a-sky&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#f92672">a-entity&lt;/span>
&lt;span style="color:#a6e22e">geometry&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;
&lt;/span>&lt;span style="color:#e6db74"> primitive: torus;
&lt;/span>&lt;span style="color:#e6db74"> radius: 1;
&lt;/span>&lt;span style="color:#e6db74"> radiusTubular: 0.1;
&lt;/span>&lt;span style="color:#e6db74"> segmentsTubular: 12;&amp;#34;&lt;/span>
&lt;span style="color:#a6e22e">rotation&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;10 0 0&amp;#34;&lt;/span>
&lt;span style="color:#a6e22e">position&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;-3 1 0&amp;#34;&lt;/span>
&lt;span style="color:#a6e22e">material&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;
&lt;/span>&lt;span style="color:#e6db74"> color: #EAEFF2;
&lt;/span>&lt;span style="color:#e6db74"> roughness: 0.1;
&lt;/span>&lt;span style="color:#e6db74"> metalness: 0.5;&amp;#34;&lt;/span>
&amp;gt;
&amp;lt;/&lt;span style="color:#f92672">a-entity&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#f92672">a-box&lt;/span> &lt;span style="color:#a6e22e">color&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;#0095DD&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">position&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0 1 0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">rotation&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;20 40 0&amp;#34;&lt;/span>&amp;gt; &amp;lt;/&lt;span style="color:#f92672">a-box&lt;/span>&amp;gt;
&amp;lt;/&lt;span style="color:#f92672">a-scene&lt;/span>&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://fly04.github.io/LabVeilTech/images/5.png" alt="">&lt;/p>
&lt;p>Dans cet exemple, les deux formes géométriques que nous avons ont été créées directement via des balises HTML. A-FRAME permet également de faire cela à travers du JavaScript.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#66d9ef">let&lt;/span> &lt;span style="color:#a6e22e">scene&lt;/span> &lt;span style="color:#f92672">=&lt;/span> document.&lt;span style="color:#a6e22e">querySelector&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;a-scene&amp;#39;&lt;/span>);
&lt;span style="color:#66d9ef">let&lt;/span> &lt;span style="color:#a6e22e">cylinder&lt;/span> &lt;span style="color:#f92672">=&lt;/span> document.&lt;span style="color:#a6e22e">createElement&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;a-cylinder&amp;#39;&lt;/span>);
&lt;span style="color:#a6e22e">cylinder&lt;/span>.&lt;span style="color:#a6e22e">setAttribute&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;color&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;#FF9500&amp;#39;&lt;/span>);
&lt;span style="color:#a6e22e">cylinder&lt;/span>.&lt;span style="color:#a6e22e">setAttribute&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;height&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;2&amp;#39;&lt;/span>);
&lt;span style="color:#a6e22e">cylinder&lt;/span>.&lt;span style="color:#a6e22e">setAttribute&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;radius&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;0.75&amp;#39;&lt;/span>);
&lt;span style="color:#a6e22e">cylinder&lt;/span>.&lt;span style="color:#a6e22e">setAttribute&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;position&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;3 1 0&amp;#39;&lt;/span>);
&lt;span style="color:#a6e22e">scene&lt;/span>.&lt;span style="color:#a6e22e">appendChild&lt;/span>(&lt;span style="color:#a6e22e">cylinder&lt;/span>);
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://fly04.github.io/LabVeilTech/images/6.png" alt="">&lt;/p>
&lt;p>Finalement, il est possible d&amp;rsquo;animer nos objets avec une balise dédiée. En effet, la balise &lt;code>&amp;lt;a-animation&amp;gt;&lt;/code> peut se placer en tant qu&amp;rsquo;enfant d&amp;rsquo;un élément existant et propose des attributs permettant de spécifier les variables d&amp;rsquo;animation classiques (tels que la durée, le départ et l&amp;rsquo;arrivée, l&amp;rsquo;attribut animé, la courbe accélération, etc&amp;hellip;).&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-html" data-lang="html">&amp;lt;&lt;span style="color:#f92672">a-box&lt;/span> &lt;span style="color:#a6e22e">color&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;#0095DD&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">rotation&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;20 40 0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">position&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0 1 0&amp;#34;&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#f92672">a-animation&lt;/span>
&lt;span style="color:#a6e22e">attribute&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;rotation&amp;#34;&lt;/span>
&lt;span style="color:#a6e22e">from&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;20 0 0&amp;#34;&lt;/span>
&lt;span style="color:#a6e22e">to&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;20 360 0&amp;#34;&lt;/span>
&lt;span style="color:#a6e22e">direction&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;alternate&amp;#34;&lt;/span>
&lt;span style="color:#a6e22e">dur&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;4000&amp;#34;&lt;/span>
&lt;span style="color:#a6e22e">repeat&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;indefinite&amp;#34;&lt;/span>
&lt;span style="color:#a6e22e">easing&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;ease&amp;#34;&lt;/span>
&amp;gt;
&amp;lt;/&lt;span style="color:#f92672">a-animation&lt;/span>&amp;gt;
&amp;lt;/&lt;span style="color:#f92672">a-box&lt;/span>&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Pour conclure cet article, je trouve qu&amp;rsquo;il est impressionnant de voir ce qu&amp;rsquo;il est possible de faire avec si peu de lignes et une complexité abordable. A-FRAME intègre la librairie d&amp;rsquo;animation tween.js et je suis très curieux d&amp;rsquo;expérimenter à l&amp;rsquo;avenir les possibilités qu&amp;rsquo;elle offre afin de créer des expériences interactives et animées.&lt;/p></content></item><item><title>glTF, aka JPEG de la 3D</title><link>https://fly04.github.io/LabVeilTech/posts/gltf/</link><pubDate>Mon, 24 Jan 2022 16:20:07 +0100</pubDate><guid>https://fly04.github.io/LabVeilTech/posts/gltf/</guid><description>Un format taillé pour les besoins actuels À chaque type d&amp;rsquo;utilisation son format de fichier et la 3D ne déroge pas à cette règle. Encore méconnu du grand public, le glTF (GL Transmission Format) est un format de fichier open-source de scènes et modèles 3D basé sur le format JSON. Si ce format n&amp;rsquo;a pas été crée expressément pour la réalité virtuelle, son utilisation en parallèle de l&amp;rsquo;API WebXR semble paraître une évidence.</description><content>&lt;h2 id="un-format-taillé-pour-les-besoins-actuels">Un format taillé pour les besoins actuels&lt;/h2>
&lt;p>À chaque type d&amp;rsquo;utilisation son format de fichier et la 3D ne déroge pas à cette règle. Encore méconnu du grand public, le glTF (GL Transmission Format) est un format de fichier open-source de scènes et modèles 3D basé sur le format JSON. Si ce format n&amp;rsquo;a pas été crée expressément pour la réalité virtuelle, son utilisation en parallèle de l&amp;rsquo;API WebXR semble paraître une évidence. Il a pour avantage d&amp;rsquo;être API-agonistique ce qui lui confère une grande flexibilité. Dans un contexte web, il peut donc être utilisé avec par exemple des framework tel que A-FRAME.&lt;/p>
&lt;p>Son utilisation est grandissante et de plus en plus d&amp;rsquo;acteurs importants de l&amp;rsquo;industrie tels que Google ou Facebook l&amp;rsquo;adoptent au fil des années. Son succès repose sur une taille réduite permettant des chargements très rapide, le fait d&amp;rsquo;être API-agnostique et sa capacité a représenter l&amp;rsquo;intégralité d&amp;rsquo;une scène 3D. Godot, un moteur de jeu au succès grandissant, souhaite voir le glTF devenir le format standard d&amp;rsquo;échange de ressources pour le développement de jeux, mettant en avant les avantages cités précédemment mais également le fait qu&amp;rsquo;il soit basé sur le JSON ce qui permet une grande lisibilité, l&amp;rsquo;absence de de données redondantes et sa modernité, le glTF lui-même supportant les dernières technologies utilisées dans la modélisation 3D.&lt;/p>
&lt;h2 id="une-nécessité-pour-les-technologies-daujourdhui">Une nécessité pour les technologies d&amp;rsquo;aujourd&amp;rsquo;hui&lt;/h2>
&lt;p>Avant sa création en 2015, les deux formats de fichiers 3D dominants et principalement utilisés dans des contextes de modélisation 3D et de moteurs de jeu 3D étaient FBX et OBJ mais ceux-ci présentaient des contraintes que le glTF a voulu dépasser. Par exemple, le format FBX est un format propriétaire et nécessite un lourd SDK C++ pour être chargé, le rendant quasiment impossible à afficher directement sur un navigateur web. De son côté, OBJ présente comme défaut d&amp;rsquo;être un format très lourd en terme de stockage et donc très lent à être chargé sur le web.&lt;/p>
&lt;p>Qu&amp;rsquo;est-ce qu&amp;rsquo;il se cache derrière ce format? En réalité, un fichier .gltf est écrit en JSON et va simplement référencer d&amp;rsquo;autres fichiers comme par exemple des textures et des formes géométriques 3D.&lt;/p>
&lt;p>&lt;img src="https://www.khronos.org/assets/uploads/apis/2020-core-gltf-2-0-asset-structure.jpg" alt="">
&lt;em>Construction d&amp;rsquo;un fichier .gltf&lt;/em>&lt;/p>
&lt;p>Depuis 2017, le glTF en est à sa deuxième version et est depuis accompagné par le format GLB qui est sa forme binaire et qui a pour différence d&amp;rsquo;intégrer directement les textures au lieu de faire le lien vers des fichiers externes. Cinq ans après, le monde de la 3D a évolué et semble être en passe de continuer à sensiblement se complexifier dans les années à venir. Il sera intéressant de voir ce que proposeront les spécifications glTF 3.0 et les nouveaux formats de fichiers voués à émerger en fonction de nos besoins futurs.&lt;/p></content></item><item><title>WebXR, le futur de la réalité virtuelle?</title><link>https://fly04.github.io/LabVeilTech/posts/webxr/</link><pubDate>Mon, 24 Jan 2022 16:13:35 +0100</pubDate><guid>https://fly04.github.io/LabVeilTech/posts/webxr/</guid><description>L&amp;rsquo;accessibilité, un frein à la démocratisation La réalité virtuelle en tant que technologie quotidienne et utilisée de manière globale est encore à venir. Un certain nombre de problématiques rendent cette adoption difficile dans l&amp;rsquo;état actuel des choses. Si on peut citer les limitations techniques qui ne permettent pas une résolution suffisamment grande pour permettre une vision nette et donc une immersion forte ou les cas de motion sickness qui rendent certains utilisateurs nauséeux après un temps donné d&amp;rsquo;utilisation, l&amp;rsquo;accessibilité de la technologie fait également partie des freins à une adoption à grande échelle.</description><content>&lt;h2 id="laccessibilité-un-frein-à-la-démocratisation">L&amp;rsquo;accessibilité, un frein à la démocratisation&lt;/h2>
&lt;p>La réalité virtuelle en tant que technologie quotidienne et utilisée de manière globale est encore à venir. Un certain nombre de problématiques rendent cette adoption difficile dans l&amp;rsquo;état actuel des choses. Si on peut citer les limitations techniques qui ne permettent pas une résolution suffisamment grande pour permettre une vision nette et donc une immersion forte ou les cas de motion sickness qui rendent certains utilisateurs nauséeux après un temps donné d&amp;rsquo;utilisation, l&amp;rsquo;accessibilité de la technologie fait également partie des freins à une adoption à grande échelle.&lt;/p>
&lt;p>En effet, dans de nombreuses parties du monde, les casques de réalité virtuelle sont soit trop onéreux, soit tout simplement indisponibles. Et si la solution à cette problématique se trouvait dans nos navigateurs et nos smartphones?&lt;/p>
&lt;p>Il ne sera pas question ici uniquement de réalité virtuelle mais de XR, à savoir &amp;ldquo;extended reality&amp;rdquo;, terme englobant à la fois la réalité virtuelle et la réalité augmentée. Selon certains, la XR est en phase de devenir une partie intégrante de nos vies, trouvant une utilité dans toute sorte de situations, qu&amp;rsquo;elles soient professionnelles ou privées, banales ou insolites.&lt;/p>
&lt;h2 id="la-réponse-est-dans-nos-navigateurs">La réponse est dans nos navigateurs&lt;/h2>
&lt;p>Il serait donc possible que l&amp;rsquo;adoption de la XR dans nos quotidiens se fasse à travers nos navigateurs web et nos smartphones. Depuis quelques années déjà, les iPhone intègrent des composants taillés pour l&amp;rsquo;XR, ceux-ci étant par exemple capables de scanner des espaces d&amp;rsquo;en créer des cartographies 3D. Si à l&amp;rsquo;avenir davantage de constructeurs décident de suivre cet exemple, le futur de la XR pourraient bien passer à travers les smartphones dont l&amp;rsquo;utilisation s&amp;rsquo;est déjà fermement ancrée dans nos vies.&lt;/p>
&lt;p>Cependant, posséder un smartphone de dernière génération représente tout de même un coût. Les navigateurs web, grâce à la standardisation apportée par WebXR, sont eux aussi, plus que jamais, capables de rendre et d&amp;rsquo;afficher des contenus d&amp;rsquo;XR, et ce sur n&amp;rsquo;importe quel appareil. En plus de rendre accessible la XR aux consommateurs, WebXR permet une grande flexibilité en terme de création. En effet, la manière dont le contenu est crée n&amp;rsquo;importe pas ce qui permet aux développeurs d&amp;rsquo;utiliser les frameworks ou moteurs de leur choix, mais aussi par exemple aux non-développeurs d&amp;rsquo;utiliser des outils permettant de créer sans avoir à coder.&lt;/p>
&lt;p>Parmi ces outils de création, plusieurs sont déjà bien établis proposant ainsi de nombreux exemples et une documentation fournie. Certains d&amp;rsquo;entre eux sont des moteurs de jeux à l&amp;rsquo;instar de Godot et d&amp;rsquo;autres des framework JavaScript, comme A-FRAME, three.js ou babylon.js.&lt;/p>
&lt;p>En conclusion, il est possible que la démocratisation progressive de WebXR permette d&amp;rsquo;augmenter le nombre de potentiels utilisateurs d&amp;rsquo;XR, ne limitant pas le public à ceux ayant la possibilité d&amp;rsquo;acquérir un casque de réalité virtuelle ou dans un cas plus extrême des Hololens, notamment dans les régions du monde les plus pauvres.&lt;/p>
&lt;h3 id="sources">Sources&lt;/h3>
&lt;p>&lt;a href="https://medium.com/@BabatundeFatai/a-look-at-webxr-and-its-frameworks-as-an-important-future-of-xr-technology-aa72c8a839e5">https://medium.com/@BabatundeFatai/a-look-at-webxr-and-its-frameworks-as-an-important-future-of-xr-technology-aa72c8a839e5&lt;/a>&lt;/p></content></item></channel></rss>